library(rvest)
library(dplyr)
library(tidyr)
url = "~/Downloads/Box Office By Year (2010) - Bollywood MuVyz.htm"
url_html = read_html(url)
n_pages = url_html %>% html_node(".pagenum") %>% html_text()
library(stringr)
npages
n_pages
strsplit(n_pages, "/")
strsplit(n_pages, "/")[[1]][2]
str_replace_all(strsplit(n_pages, "/")[[1]][2], "[^[:num:]]", "")
str_replace_all(strsplit(n_pages, "/")[[1]][2], "[[:punct:]]", "")
str_replace_all(strsplit(n_pages, "/")[[1]][2], "\n", "")
str_replace_all(strsplit(n_pages, "/")[[1]][2], "[\n|\>]", "")
str_replace_all(strsplit(n_pages, "/")[[1]][2], "[\n\>]", "")
str_replace_all(strsplit(n_pages, "/")[[1]][2], "(\n|\>)", "")
str_replace_all(strsplit(n_pages, "/")[[1]][2], "(\n|>)", "")
clean_npages = function(n_pages) {
x = strsplit(n_pages, "/")[[1]][2]
x = str_replace_all(x, "(\n|>)", "")
x = as.numeric(x)
return(x)
}
n_pages = url_html %>% html_node(".pagenum") %>% html_text() %>% clean()
n_pages = url_html %>% html_node(".pagenum") %>% html_text() %>% clean_npages()
x = url_html %>% html_nodes("img")
x = url_html %>% html_nodes("img") %>% html_attr("title")
x
x = url_html %>% html_nodes(".movieimage img") %>% html_attr("title")
x
library(rvest)
library(dplyr)
library(tidyr)
library(stringr)
# https://muvyz.com/boxoffice/byyear/y6/2010
url = "Box Office By Year (2010) - Bollywood MuVyz.htm"
url_html = read_html(url)
clean_npages = function(n_pages) {
x = strsplit(n_pages, "/")[[1]][2]
x = str_replace_all(x, "(\n|>)", "")
x = as.numeric(x)
return(x)
}
n_pages = url_html %>% html_node(".pagenum") %>% html_text() %>% clean_npages()
x = url_html %>% html_nodes(".movieimage img") %>% html_attr("title")
x
titles = url_html %>% html_nodes(".movieimage img") %>% html_attr("title")
x = url_html %>% html_nodes(".movieimage red") %>% html_text()
x
x = url_html %>% html_nodes(".movieimage .red") %>% html_text()
x
tmp = x[1]
str_replace(tmp, "(\u20b9|,)", "")
str_replace(tmp, "(\u20b9|\\,)", "")
str_replace(tmp, "[\u20b9\\,]", "")
str_replace(tmp, "[\u20b9|\\,]", "")
str_replace(tmp, "[\\,]", "")
str_replace(tmp, "[,]", "")
str_replace(tmp, ",", "")
x = "1,23,4"
gsub(",","",x)
str_replace(x, "," "")
str_replace(x, ",", "")
str_replace_all(x, ",", "")
str_replace_all(tmp, "(\u20b9|,)", "")
clean_rev_inr = function(rev_inr) {
x = str_replace_all(rev_inr, "(\u20b9|,)", "")
x = as.numeric(x)
return(x)
}
x
x = url_html %>% html_nodes(".movieimage .red") %>% html_text()
map_dbl(x, ~clean_rev_inr)
library(purrr)
map_dbl(x, ~clean_rev_inr)
map_dbl(x, function(y) clean_rev_inr(y))
rev_inr = url_html %>% html_nodes(".movieimage .red") %>% html_text() %>%
map_dbl(function(x) clean_rev_inr(x))
rev_inr
get_movie_df = function(url) {
url_html = read_html(url)
n_pages = url_html %>% html_node(".pagenum") %>% html_text() %>% clean_npages()
titles = url_html %>% html_nodes(".movieimage img") %>% html_attr("title")
rev_inr = url_html %>% html_nodes(".movieimage .red") %>% html_text() %>%
map_dbl(function(x) clean_rev_inr(x))
df = tibble(title = titles, rev_inr = rev_inr)
return(df)
}
tmp = get_movie_df(url)
View(tmp)
get_movie_df = function(url, yr) {
url_html = read_html(url)
n_pages = url_html %>% html_node(".pagenum") %>% html_text() %>% clean_npages()
titles = url_html %>% html_nodes(".movieimage img") %>% html_attr("title")
rev_inr = url_html %>% html_nodes(".movieimage .red") %>% html_text() %>%
map_dbl(function(x) clean_rev_inr(x))
df = tibble(year = yr, title = titles, rev_inr = rev_inr)
return(df)
}
tmp = get_movie_df(url, 2000)
View(tmp)
url = "https://muvyz.com/boxoffice/byyear/y6/2010/"
tmp = get_movie_df(url, 2000)
View(tmp)
yrlist = seq(1950, 2020)
yrsuffix = rep(paste0("y", seq(0, 6)), each = 10)
url_list = paste0("https://muvyz.com/boxoffice/byyear/", yrsuffix, "/", yrlist, "/")
url_list
yrsuffix = c(rep(paste0("y", seq(0, 6)), each = 10), "y6")
url_list = paste0("https://muvyz.com/boxoffice/byyear/", yrsuffix, "/", yrlist, "/")
url_list
url = url_list[1]
url
url_html = read_html(url)
n_pages = url_html %>% html_node(".pagenum") %>% html_text() %>% clean_npages()
n_pages
70*4*10/3600
get_movie_df = function(url, yr) {
url_html = read_html(url)
n_pages = url_html %>% html_node(".pagenum") %>% html_text() %>% clean_npages()
n = ifelse(is.na(n_pages), 1, n_pages + 1)
df_L = list()
for (i in 1:n) {
titles = url_html %>% html_nodes(".movieimage img") %>% html_attr("title")
rev_inr = url_html %>% html_nodes(".movieimage .red") %>% html_text() %>%
map_dbl(function(x) clean_rev_inr(x))
df_L[[i]] = tibble(year = yr, title = titles, rev_inr = rev_inr)
}
df = bind_rows(df_L)
return(df)
}
url = url_list[1]
tmp = get_movie_df(url, 2000)
View(tmp)
url = url_list[3]
tmp = get_movie_df(url, 2000)
View(tmp)
url_list[60]
url = url_list[60]
tmp = get_movie_df(url, 2000)
View(tmp)
